// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role {
  CUSTOMER
  ADMIN
  CASHIER
}

enum Type {
  PLACE
  PRODUCT
}

enum BookingStatus{
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}

model User{
  id String @id @default(uuid())
  firebase_uid String @unique
  username String
  email String @unique
  role Role @default(CUSTOMER)
  booking_as_customer Booking[] @relation("CustomerBooking")
  booking_created_by Booking[] @relation("TPBooking")
}

model Category{
  id Int @id @default(autoincrement())
  name String
  type Type
  slug String
}

model Booking{
  id String @id @default(uuid())
  customer User @relation("CustomerBooking",fields: [customer_id], references: [id])
  customer_id String
  created_by User @relation("TPBooking", fields: [created_by_id], references: [id])
  created_by_id String
  booking_for Type
  status BookingStatus @default(PENDING)
  created_at DateTime
  updated_at DateTime
}

model Place{
  id String @unique @default(uuid())
  name String
  price_per_hour Int
  is_available Boolean @default(false)
  is_under_maintainance Boolean @default(false)
}